name: Generate Documentation PDFs

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'ARQUITECTURA.md'
      - 'DATABASE-DOMAINS-STRUCTURE.md'
      - 'DIAGRAMAS-SIMPLIFICADOS.md'
      - 'exports/schema.sql'
      - '.github/workflows/generate-pdfs.yml'
  workflow_dispatch: # Permite ejecutar manualmente el workflow

permissions:
  contents: write

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install system dependencies for Chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            chromium-browser \
            libnss3 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libpango-1.0-0 \
            libcairo2 \
            libasound2t64

      - name: Install mermaid-cli
        run: npm install -g @mermaid-js/mermaid-cli

      - name: Install md-to-pdf
        run: npm install -g md-to-pdf

      - name: Create exports directory
        run: mkdir -p exports

      - name: Create md-to-pdf config with Mermaid support
        run: |
          cat > .md-to-pdf.js << 'EOF'
          module.exports = {
            pdf_options: {
              format: 'A4',
              margin: '20mm',
              printBackground: true,
              timeout: 60000
            },
            stylesheet: [
              'https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.5.1/github-markdown.min.css',
              'https://cdnjs.cloudflare.com/ajax/libs/mermaid/10.6.1/mermaid.min.css'
            ],
            body_class: 'markdown-body',
            marked_options: {
              headerIds: true,
              smartypants: true,
            },
            launch_options: {
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            },
            md_file_encoding: 'utf-8',
            stylesheet_encoding: 'utf-8',
            as_html: false,
            highlight_style: 'github',
            script: `
              <script src="https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js"></script>
              <script>
                mermaid.initialize({
                  startOnLoad: true,
                  theme: 'default',
                  securityLevel: 'loose',
                  logLevel: 'debug'
                });
                // Wait for Mermaid to render before PDF generation
                window.addEventListener('load', function() {
                  setTimeout(function() {
                    document.body.classList.add('mermaid-ready');
                  }, 2000);
                });
              </script>
            `,
            waitForNetworkIdle: true
          }
          EOF

      - name: Render Mermaid diagrams
        run: |
          # Extract and render mermaid diagrams from markdown files
          for file in ARQUITECTURA.md DATABASE-DOMAINS-STRUCTURE.md DIAGRAMAS-SIMPLIFICADOS.md; do
            if [ -f "$file" ]; then
              echo "Processing $file for Mermaid diagrams..."
              # This will be handled by md-to-pdf with proper config
            fi
          done

      - name: Generate ARQUITECTURA.pdf
        run: |
          md-to-pdf ARQUITECTURA.md --config-file .md-to-pdf.js
          mv ARQUITECTURA.pdf exports/
        continue-on-error: false

      - name: Generate DATABASE-DOMAINS-STRUCTURE.pdf
        run: |
          md-to-pdf DATABASE-DOMAINS-STRUCTURE.md --config-file .md-to-pdf.js
          mv DATABASE-DOMAINS-STRUCTURE.pdf exports/
        continue-on-error: false

      - name: Generate DIAGRAMAS-SIMPLIFICADOS.pdf
        run: |
          md-to-pdf DIAGRAMAS-SIMPLIFICADOS.md --config-file .md-to-pdf.js
          mv DIAGRAMAS-SIMPLIFICADOS.pdf exports/
        continue-on-error: false

      - name: Check if there are changes
        id: check_changes
        run: |
          git diff --quiet exports/*.pdf || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Commit and push PDFs
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add exports/*.pdf
          git commit -m "docs: update generated PDFs [skip ci]"
          git push

      - name: Summary
        run: |
          echo "## PDF Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Successfully generated PDFs:" >> $GITHUB_STEP_SUMMARY
          echo "- ARQUITECTURA.pdf" >> $GITHUB_STEP_SUMMARY
          echo "- DATABASE-DOMAINS-STRUCTURE.pdf" >> $GITHUB_STEP_SUMMARY
          echo "- DIAGRAMAS-SIMPLIFICADOS.pdf" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f exports/ARQUITECTURA.pdf ]; then
            echo "ðŸ“„ ARQUITECTURA.pdf size: $(du -h exports/ARQUITECTURA.pdf | cut -f1)" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f exports/DATABASE-DOMAINS-STRUCTURE.pdf ]; then
            echo "ðŸ“„ DATABASE-DOMAINS-STRUCTURE.pdf size: $(du -h exports/DATABASE-DOMAINS-STRUCTURE.pdf | cut -f1)" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f exports/DIAGRAMAS-SIMPLIFICADOS.pdf ]; then
            echo "ðŸ“„ DIAGRAMAS-SIMPLIFICADOS.pdf size: $(du -h exports/DIAGRAMAS-SIMPLIFICADOS.pdf | cut -f1)" >> $GITHUB_STEP_SUMMARY
          fi
